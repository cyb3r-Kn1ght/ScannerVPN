# Quy tắc chia nhỏ portscan và xử lý sub-scanner

## 1. Các trường hợp scan port
- **Option 1:** Quét 1000 port phổ biến (`top-1000`)
  - Lấy danh sách 1000 port từ file `nmap-ports-top1000.txt` (đã chuẩn hóa thành list port).
- **Option 2:** Quét tất cả port
  - Lấy danh sách 1-65535 từ file `Ports-1-To-65535.txt`.
- **Option 3:** Quét các port chỉ định
  - Lấy danh sách port từ chuỗi do user nhập (ví dụ: `80,443,8080`).

## 2. Số lượng scanner
- Nếu **không truyền** hoặc truyền **số lượng scanner = 1**:  
  - Xử lý như logic hiện tại, tạo 1 sub-job cho mỗi target.
- Nếu **số lượng scanner > 1**:
  - Chia danh sách port thành N phần (N là số scanner).
    - Nếu chia dư, chia đều phần dư cho các scanner đầu tiên.
    - Nếu số scanner > số port, chỉ tạo số scanner đúng bằng số port (mỗi scanner 1 port).
  - Với nhiều target, các sub-scanner sẽ lần lượt scan từng phần port của từng target (giống như chia round-robin).
  - Mỗi sub-job sẽ nhận 1 phần port của 1 target, kết quả trả về sẽ được merge lại như logic scan nhiều target hiện tại.

## 3. Merge kết quả
- Kết quả cuối cùng lưu vào database và trả về API **luôn giữ format cũ** (1 list open_ports cho mỗi target).
- Khi nhận kết quả từ các sub-scanner, controller sẽ merge lại thành 1 kết quả duy nhất cho mỗi target.

## 4. Lưu ý đặc biệt
- Nếu số scanner > số port (ví dụ: chỉ định 3 port, yêu cầu 5 scanner), chỉ tạo đúng số scanner bằng số port.
- Các scanner không có port được giao sẽ **không khởi tạo**.
- Khi chia port, đảm bảo không bị trùng lặp, không bỏ sót port.
- Kết quả trả về cho dashboard/frontend không thay đổi format.

---

**Ví dụ:**
- Scan 2 target, option top-1000, chia 5 scanner:
  - Mỗi scanner sẽ lần lượt scan 200 port của từng target, gửi kết quả về controller để merge.
- Scan 1 target, chỉ định 3 port, chia 5 scanner:
  - Chỉ tạo 3 scanner, mỗi scanner 1 port.

---

**File port sử dụng:**
- `nmap-ports-top1000.txt`: Chuỗi port hoặc range parse thành list số nguyên. (1,3-4,6-7,9,13,...)
- `Ports-1-To-65535.txt`: Mỗi dòng 1 port, dùng cho quét all port.


1. Đọc và chuẩn hóa danh sách port
Viết hàm đọc file nmap-ports-top1000.txt (parse chuỗi port, range thành list số nguyên).
Viết hàm đọc file Ports-1-To-65535.txt (mỗi dòng 1 port, thành list số nguyên).
Viết hàm parse chuỗi port chỉ định từ user (ví dụ: "80,443,8080").
2. Hàm chia port thành N phần
Viết hàm chia đều list port thành N phần (chia dư thì phần đầu nhiều hơn 1 port).
Nếu N > số port, chỉ tạo N = số port phần (mỗi phần 1 port).
3. Xử lý logic tạo sub-job
Khi nhận request từ dashboard:
Nếu không truyền số lượng scanner hoặc = 1: tạo 1 sub-job như cũ.
Nếu số lượng scanner > 1:
Lấy danh sách port theo option.
Chia thành N phần.
Với mỗi target, lần lượt tạo sub-job cho từng phần port.
Gán VPN profile cho từng sub-job nếu cần.
4. Merge kết quả sub-job
Khi nhận kết quả từ các sub-job:
Merge lại thành 1 list open_ports cho mỗi target (không trùng lặp).
Lưu vào database và trả về API đúng format cũ.
5. Xử lý các trường hợp đặc biệt
Nếu số scanner > số port, chỉ tạo đúng số port sub-job.
Không tạo sub-job nếu không có port được giao.
6. Unit test các hàm chia port và merge kết quả
Đảm bảo chia đúng, không trùng, không sót, merge đúng format.
Tóm lại:

Bước 1: Viết hàm đọc/parse danh sách port.
Bước 2: Viết hàm chia port thành N phần.
Bước 3: Tích hợp vào logic tạo sub-job của controller.
Bước 4: Merge kết quả sub-job khi hoàn thành.
Bước 5: Test kỹ các trường hợp đặc biệt.